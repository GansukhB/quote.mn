<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Page', 'doctrine');

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property string $title
 * @property string $front_image
 * @property string $body
 * @property integer $is_link
 * @property string $link
 * @property integer $is_active
 * @property integer $is_in_menu
 * @property integer $sort
 * @property integer $created_user_id
 * @property timestamp $updated_at
 * @property timestamp $created_at
 * 
 * @method integer   getId()              Returns the current record's "id" value
 * @method integer   getParentId()        Returns the current record's "parent_id" value
 * @method string    getTitle()           Returns the current record's "title" value
 * @method string    getFrontImage()      Returns the current record's "front_image" value
 * @method string    getBody()            Returns the current record's "body" value
 * @method integer   getIsLink()          Returns the current record's "is_link" value
 * @method string    getLink()            Returns the current record's "link" value
 * @method integer   getIsActive()        Returns the current record's "is_active" value
 * @method integer   getIsInMenu()        Returns the current record's "is_in_menu" value
 * @method integer   getSort()            Returns the current record's "sort" value
 * @method integer   getCreatedUserId()   Returns the current record's "created_user_id" value
 * @method timestamp getUpdatedAt()       Returns the current record's "updated_at" value
 * @method timestamp getCreatedAt()       Returns the current record's "created_at" value
 * @method Page      setId()              Sets the current record's "id" value
 * @method Page      setParentId()        Sets the current record's "parent_id" value
 * @method Page      setTitle()           Sets the current record's "title" value
 * @method Page      setFrontImage()      Sets the current record's "front_image" value
 * @method Page      setBody()            Sets the current record's "body" value
 * @method Page      setIsLink()          Sets the current record's "is_link" value
 * @method Page      setLink()            Sets the current record's "link" value
 * @method Page      setIsActive()        Sets the current record's "is_active" value
 * @method Page      setIsInMenu()        Sets the current record's "is_in_menu" value
 * @method Page      setSort()            Sets the current record's "sort" value
 * @method Page      setCreatedUserId()   Sets the current record's "created_user_id" value
 * @method Page      setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Page      setCreatedAt()       Sets the current record's "created_at" value
 * 
 * @package    quote.mn
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('front_image', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('is_link', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('link', 'string', 520, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 520,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_in_menu', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}