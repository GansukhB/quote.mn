<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CategoryContent', 'doctrine');

/**
 * BaseCategoryContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $model_name
 * @property integer $model_id
 * @property integer $category_id
 * @property integer $created_user_id
 * @property timestamp $updated_at
 * @property timestamp $created_at
 * 
 * @method integer         getId()              Returns the current record's "id" value
 * @method string          getModelName()       Returns the current record's "model_name" value
 * @method integer         getModelId()         Returns the current record's "model_id" value
 * @method integer         getCategoryId()      Returns the current record's "category_id" value
 * @method integer         getCreatedUserId()   Returns the current record's "created_user_id" value
 * @method timestamp       getUpdatedAt()       Returns the current record's "updated_at" value
 * @method timestamp       getCreatedAt()       Returns the current record's "created_at" value
 * @method CategoryContent setId()              Sets the current record's "id" value
 * @method CategoryContent setModelName()       Sets the current record's "model_name" value
 * @method CategoryContent setModelId()         Sets the current record's "model_id" value
 * @method CategoryContent setCategoryId()      Sets the current record's "category_id" value
 * @method CategoryContent setCreatedUserId()   Sets the current record's "created_user_id" value
 * @method CategoryContent setUpdatedAt()       Sets the current record's "updated_at" value
 * @method CategoryContent setCreatedAt()       Sets the current record's "created_at" value
 * 
 * @package    quote.mn
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoryContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category_content');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('model_name', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('model_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}