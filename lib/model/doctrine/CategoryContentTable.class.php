<?php

/**
 * CategoryContentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CategoryContentTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CategoryContentTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('CategoryContent');
    }

    public function deleteUncheckedCategoryContent($model_name, $model_id, $currently_checked_ids)
    {
        if(count($currently_checked_ids) == 0)
        {
            $currently_checked_ids[] = 0;
            $uncategorized = Doctrine::getTable('CategoryContent')
                    ->createQuery('a')
                    ->where('a.model_name=?', $model_name)
                    ->andWhere('a.model_id=?', $model_id)
                    ->andWhere('a.category_id=0')
                    ->fetchOne();
            if(!$uncategorized)
            {
                $uncategorized = new ModuleCategoryContent();
                $uncategorized->setModelName('post');
                $uncategorized->setModelId($model_id);
                $uncategorized->setCategoryId('0');
                $uncategorized->save();
            }
        }
            
        $results = Doctrine::getTable('CategoryContent')
                ->createQuery('a')
                ->where('a.model_name=?', $model_name)
                ->andWhere('a.model_id=?', $model_id)
                ->andWhereNotIn('a.category_id', $currently_checked_ids)
                ->execute();
        
        foreach($results as $result)
        {
            $result->delete();
        }
        return true;
    }
    public function createCheckedCategoryContent($model_name, $model_id, $currently_checked_ids)
    {
        foreach($currently_checked_ids as $category_id)
        {
            $category_content = Doctrine::getTable('CategoryContent')
                    ->findOneBY('model_nameAndmodel_idAndcategory_id', array($model_name, $model_id, $category_id));

            if(!$category_content)
            {
                $category_content = new CategoryContent();
                $category_content->setModelName($model_name);
                $category_content->setModelId($model_id);
                $category_content->setCategoryId($category_id);
                $category_content->save();
            }
        }
    }
}